apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-local-node-1
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /var/www/html—ã
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kub-node-1
---    

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: local-volume
spec:
  storageClassName: "local-storage"
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: local-volume
      initContainers:
      - name: init
        image: maksymblinov/init_db:v1
        command: ["sh", "-c", "sleep 200 && touch /var/www/html/.ready"]
        volumeMounts:
        - name: data
          mountPath: /var/www/html
      containers:
      - name: wordpress
        image: wordpress:latest
        env:
        - name: WORDPRESS_DB_HOST
          value: "mysql-wpmax.mysql.database.azure.com"
        - name: WORDPRESS_DB_NAME
          value: "test_manifest12"
        - name: WORDPRESS_DB_USER
          value: "mysqladmin@mysql-wpmax"
        - name: WORDPRESS_DB_PASSWORD
          value: "1-qwerty"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: data
          mountPath: /var/www/html
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "[ -f /var/www/html/.ready ]"
          periodSeconds: 5
          initialDelaySeconds: 5
          failureThreshold: 10 
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
spec:
  selector:
    app: wordpress
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer
