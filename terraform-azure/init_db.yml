# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: task-pv-volume
#   labels:
#     type: local
# spec:
#   storageClassName: manual
#   capacity:
#     storage: 2Gi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: "/var/www/html"
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: task-pv-claim
# spec:
#   storageClassName: manual
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
# #       storage: 1Gi
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      # volumes:
      #   - name: data
      #     persistentVolumeClaim:
      #       claimName: task-pv-claim
      initContainers:
        - name: init
          image: maksymblinov/init_db:v1
          # command: ["sh", "-c", "sleep 200 && touch /var/www/html/.ready"]
          # volumeMounts:
          #     - mountPath: /var/www/html
          #       name: data
      containers:
        - name: wordpress
          image: wordpress:latest
          env:
            - name: WORDPRESS_DB_HOST
              value: "mysql-wpmax.mysql.database.azure.com"
            - name: WORDPRESS_DB_NAME
              value: "test_manifest12"
            - name: WORDPRESS_DB_USER
              value: "mysqladmin@mysql-wpmax"
            - name: WORDPRESS_DB_PASSWORD
              value: "1-qwerty"
          ports:
            - containerPort: 80
          # volumeMounts:
          #   - mountPath: /var/www/html
          #     name: data
          # readinessProbe:
          #   exec:
          #     command:
          #       - sh
          #       - -c
          #       - "[ -f /var/www/html/.ready ]"
          #   periodSeconds: 5
          #   initialDelaySeconds: 5
          #   failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
spec:
  selector:
    app: wordpress
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
