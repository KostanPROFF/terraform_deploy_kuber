name: test

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
      client-id: ${{ secrets.AZURE_CLIENT_ID }}
      tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      arm_subscription-id : $ {{ secrets.ARM_SUBSCRIPTION_ID }}
      arm_tenant-id : $ {{ secrets.ARM_TENANT_ID }}
      arm_client-id : $ {{ secrets.ARM_CLIENT_ID }}
      arm_client-secret : $ {{ secrets.ARM_CLIENT_SECRET }}
      

jobs:
  terraform:
    
    runs-on: ubuntu-latest
    steps:
    - name: Clon Rep
      uses: actions/checkout@v1

    

    - name: 'Az CLI login using OIDC'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
       

    - name: terraform init
      run: terraform init \
        -backend-config="storage_account_name=<    storage_account_name = "tfstate12334">" \
        -backend-config="container_name=<tfstate>" \
        -backend-config="key=<terraform.tfstate>" \
        -backend-config="access_key=<xu+ou9EKTUv24/lMVn3Tcq5f98isQScLqDF1/RDYhydFjT//K30NlYyINEp0M1/9OsqpzHyHB5e0+AStKHDxaA==>"

      #  terraform init -backend-config="arm_subscriptions_id=$ {{ secrets.ARM_SUBSCRIPTION_ID }},arm_tenant-id={{ secrets.ARM_TENANT_ID }} "

      
        
     

    - name: terraform plan
      id: plan
      run: terraform plan

    - name: terraform apply
      if: "!contains(github.event.head_commit.message, 'destroy')"
      run: terraform apply -auto-approve


    - name: Terraform Destroy
      if: contains(github.event.head_commit.message, 'destroy')
      run: terraform destroy -auto-approve




