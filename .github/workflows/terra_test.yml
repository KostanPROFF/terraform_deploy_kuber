name: test
on:
  push:
    branches:
      - main
 
env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform-azure
      
    steps:
    - name: Clon Rep
      uses: actions/checkout@v1  

    - name: Create Storage
      env:
        ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID}}
        ARM_CLIENT_SECRET: ${{ env.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ env.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}
        SCRIPT_DIR: ${{ github.workspace }}/terraform-azure/scripts

      run: bash  $SCRIPT_DIR/create_storage.sh

    - name: terraform init
      run: terraform init

    - name: terraform plan
      id: plan
      run: terraform plan
      
    - name: terraform apply
      if: "!contains(github.event.head_commit.message, 'destroy')"
      run: terraform apply -auto-approve

    - name: Terraform Destroy
      if: contains(github.event.head_commit.message, 'destroy')
      run: terraform destroy -auto-approve
      




