name: test
on:
  push:
    paths:
      - 'terraform-azure/**'
      - '.github/workflows/terra_test.yml'
    branches:
      - main
 
env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  KUBECONFIG: ${path.module}/kubeconfig
jobs:
  terraform-CI:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform-azure
      
    steps:
    - name: Clon Rep
      uses: actions/checkout@v1  

    - name: Create Storage
      env:
        SCRIPT_DIR: ${{ github.workspace }}/terraform-azure/scripts
      run: bash  $SCRIPT_DIR/create_storage.sh

    - name: terraform init
      run: terraform init

    - name: terraform plan
      id: plan
      run: terraform plan
      
    - name: terraform apply
      if: "!contains(github.event.head_commit.message, 'destroy')"
      run: terraform apply -auto-approve

    - name: test
      run: ls 

    - name: Check kubeconfig file
      run: ls ${{ env.KUBECONFIG }}

    - name: Check kubeconfig file
      run: cat ${{ env.KUBECONFIG }}
     
 


    - name: Terraform Destroy
      if: contains(github.event.head_commit.message, 'destroy')
      run: terraform destroy -auto-approv

  terraform-CD:
    needs: terraform-CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform-azure

    steps:
    - name: Clon Rep
      uses: actions/checkout@v2

    - name: Setup kubectl
      uses: azure/setup-kubectl@v1


    - name: Check kubeconfig file
      run: ls ${{ env.KUBECONFIG }}

    - name: Check kubeconfig file
      run: cat ${{ env.KUBECONFIG }}
    
    - name: Check kubeconfig file_!
      run: kubectl config view 
  

    - name: Apply Kubernetes manifest
      env:
        KUBECONFIG: ${{ github.workspace }}/kubeconfig
      run: |
        kubectl apply -f hello-world.yml






